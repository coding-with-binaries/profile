{"version":3,"sources":["components/header/index.js","components/header/Header.jsx","constants/routes.js","constants/text-en.js","components/main/skills/Skills.jsx","components/main/skills/index.js","components/main/home/index.js","components/main/home/Home.jsx","components/main/index.js","components/main/Main.jsx","components/nav/nav-actions.js","components/nav/index.js","components/nav/Nav.jsx","theme.js","App.jsx","serviceWorker.js","index.jsx"],"names":["Header","history","useHistory","Box","className","gridArea","direction","background","align","justify","Text","weight","color","onClick","push","size","margin","Clock","type","Routes","HOME","SKILLS","EXPERIENCE","EDUCATION","Texts","TITLE_SKILLS","TITLE_EXPERIENCE","TITLE_EDUCATION","SENTENCE_MY_DESCRIPTION_FIRST","SENTENCE_MY_DESCRIPTION_SECOND","Skills","Heading","level","List","Home","href","target","rel","Github","Twitter","Linkedin","Main","path","component","to","exact","Nav","Grid","gap","rows","elevation","Image","src","process","navActions","map","a","Icon","icon","activeClassName","title","theme","global","font","family","height","primaryText","App","Grommet","full","columns","areas","name","start","end","style","Boolean","window","location","hostname","match","ReactDOM","render","basename","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f5bd77b9.chunk.js","sourcesContent":["import Header from './Header';\nexport default Header;\n","import { Box, Clock, Text } from 'grommet';\nimport React from 'react';\nimport './Header.css';\nimport { useHistory } from 'react-router-dom';\n\nexport default function () {\n  const history = useHistory();\n  const routeToHome = () => {\n    history.push('/');\n  };\n  return (\n    <Box\n      className=\"app-header\"\n      gridArea=\"header\"\n      direction=\"row\"\n      background=\"#181818\"\n      align=\"center\"\n      justify=\"between\"\n    >\n      <Box direction=\"row\" align=\"center\">\n        <Text\n          className=\"app-title\"\n          weight=\"bold\"\n          color=\"white\"\n          onClick={routeToHome}\n        >\n          coding-with-binaries\n        </Text>\n        <Text size=\"small\" margin=\"small\" color=\"white\">\n          (By Varun Sharma)\n        </Text>\n      </Box>\n      <Clock className=\"app-header-clock\" type=\"digital\" size=\"small\" />\n    </Box>\n  );\n}\n","export default class Routes {\n  static HOME = '/';\n  static SKILLS = '/skills';\n  static EXPERIENCE = '/experience';\n  static EDUCATION = '/education';\n}\n","export default class Texts {\n  // Titles\n  static TITLE_SKILLS = 'Skills';\n  static TITLE_EXPERIENCE = 'Experience';\n  static TITLE_EDUCATION = 'Education';\n\n  // Sentences\n  static SENTENCE_MY_DESCRIPTION_FIRST = 'Hi! My name is Varun Sharma.';\n  static SENTENCE_MY_DESCRIPTION_SECOND =\n    'I am currently working as a Full-Stack Developer at VMware India';\n}\n","import { Heading, List } from 'grommet';\nimport React from 'react';\nimport Texts from '../../../constants/text-en';\n\nexport default function () {\n  return (\n    <>\n      <Heading level=\"2\">{Texts.TITLE_SKILLS}</Heading>\n      <List></List>\n    </>\n  );\n}\n","import Skills from './Skills';\nexport default Skills;\n","import Home from './Home';\nexport default Home;\n","import React from 'react';\nimport { Box, Text } from 'grommet';\nimport './Home.css';\nimport Texts from '../../../constants/text-en';\nimport { Github, Twitter, Linkedin } from 'grommet-icons';\n\nexport default function () {\n  return (\n    <Box className=\"app-home\">\n      <Box className=\"app-home-content\">\n        <Text color=\"white\" size=\"xxlarge\">\n          {Texts.SENTENCE_MY_DESCRIPTION_FIRST}\n        </Text>\n        <Text color=\"white\" size=\"large\">\n          {Texts.SENTENCE_MY_DESCRIPTION_SECOND}\n        </Text>\n      </Box>\n      <Box\n        direction=\"row\"\n        align=\"center\"\n        justify=\"center\"\n        className=\"app-home-social\"\n      >\n        <a\n          href=\"https://github.com/coding-with-binaries\"\n          target=\"_blank\"\n          rel=\"noreferrer noopener\"\n        >\n          <Github className=\"app-home-social-icon\" />\n        </a>\n        <a\n          href=\"https://twitter.com/lifeofvarun\"\n          target=\"_blank\"\n          rel=\"noreferrer noopener\"\n        >\n          <Twitter className=\"app-home-social-icon\" />\n        </a>\n        <a\n          href=\"https://www.linkedin.com/in/varunsharma95/\"\n          target=\"_blank\"\n          rel=\"noreferrer noopener\"\n        >\n          <Linkedin className=\"app-home-social-icon\" />\n        </a>\n      </Box>\n    </Box>\n  );\n}\n","import Main from './Main';\nexport default Main;\n","import { Box } from 'grommet';\nimport React from 'react';\nimport { Redirect, Route, Switch } from 'react-router-dom';\nimport Routes from '../../constants/routes';\nimport './Main.css';\nimport Skills from './skills';\nimport Home from './home';\n\nexport default function () {\n  return (\n    <Box className=\"app-main\">\n      <Switch>\n        <Route path={Routes.SKILLS} component={Skills} />\n        <Route path={Routes.HOME} component={Home} />\n        <Redirect to=\"/\" exact={true} />\n      </Switch>\n    </Box>\n  );\n}\n","/* eslint-disable no-unused-vars */\nimport { Book, Briefcase, Task } from 'grommet-icons';\nimport Routes from '../../constants/routes';\nimport Texts from '../../constants/text-en';\n\nexport default [\n  /* {\n    title: Texts.TITLE_SKILLS,\n    to: Routes.SKILLS,\n    icon: Task\n  },\n  {\n    title: Texts.TITLE_EXPERIENCE,\n    to: Routes.EXPERIENCE,\n    icon: Briefcase\n  },\n  {\n    title: Texts.TITLE_EDUCATION,\n    to: Routes.EDUCATION,\n    icon: Book\n  } */\n];\n","import Nav from './Nav';\nexport default Nav;\n","import { Box, Grid, Image, Text } from 'grommet';\nimport React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport navActions from './nav-actions';\nimport './Nav.css';\nexport default function() {\n  return (\n    <Grid\n      className=\"app-nav\"\n      gridArea=\"nav\"\n      gap=\"small\"\n      rows={['192px', 'auto']}\n    >\n      <Box\n        className=\"app-nav-profile-pic-container\"\n        align=\"center\"\n        justify=\"center\"\n      >\n        <Box\n          className=\"app-nav-profile-pic-wrapper\"\n          elevation=\"large\"\n          align=\"center\"\n          justify=\"center\"\n        >\n          <Image\n            className=\"app-nav-profile-pic\"\n            src={process.env.REACT_APP_IMAGE_URL}\n          ></Image>\n        </Box>\n      </Box>\n      <Box className=\"app-nav-actions\">\n        {navActions.map(a => {\n          const Icon = a.icon;\n          return (\n            <NavLink\n              className=\"app-nav-action\"\n              activeClassName=\"active\"\n              to={a.to}\n            >\n              <Icon size=\"20px\" className=\"app-nav-action-icon\" />\n              <Text size=\"medium\">{a.title}</Text>\n            </NavLink>\n          );\n        })}\n      </Box>\n    </Grid>\n  );\n}\n","export const theme = {\n  global: {\n    font: {\n      family: 'Quicksand',\n      size: '18px',\n      height: '20px'\n    },\n    color: {\n      primaryText: '#3c61a5'\n    }\n  }\n};\n","import { Grid, Grommet } from 'grommet';\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport './App.css';\nimport Header from './components/header';\nimport Main from './components/main';\nimport Nav from './components/nav';\nimport { theme } from './theme';\nfunction App() {\n  return (\n    <Grommet className=\"app-container\" theme={theme} full>\n      <Grid\n        rows={['72px', 'flex']}\n        columns={['small', 'auto']}\n        areas={[\n          { name: 'header', start: [0, 0], end: [1, 0] },\n          { name: 'nav', start: [0, 1], end: [0, 1] },\n          { name: 'main', start: [1, 1], end: [1, 1] }\n        ]}\n        style={{ height: '100%' }}\n      >\n        <Header />\n        <Nav />\n        <Route path=\"/\" component={Main} />\n      </Grid>\n    </Grommet>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nReactDOM.render(\n  <BrowserRouter basename=\"profile\">\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}